---
import CaretIcon from "src/components/ui/CaretIcon.astro";
import SectionDivider from "src/components/ui/SectionDivider.astro";
---

<section class="relative flex min-h-[99vh] flex-col items-center justify-center overflow-hidden py-16 md:py-24">
  <div class="pointer-events-none absolute inset-0 z-0">
    <div class="hero-grid-bg h-full w-full"></div>
    <div class="absolute bottom-0 h-1/3 w-full bg-gradient-to-t from-[#101623] to-transparent"></div>
  </div>
  <div class="relative z-10 -mt-[10vh] flex flex-col items-center px-4 sm:px-6 md:-mt-[15vh] lg:px-8">
    <h1 class="mb-6 text-center text-6xl font-bold text-white md:text-8xl">
      <span class="md:inline">Hi, I'm</span>
      <span class="mt-2 block md:mt-0 md:inline"
        ><span class="inline-flex min-w-[240px] md:min-w-[340px]">
          <span id="typewriter-container" class="relative">
            <span id="typewriter" class="text-blue-400">Ben Limmer</span><span
              id="cursor"
              class="cursor absolute text-blue-400">|</span
            >
          </span>
        </span></span
      >
    </h1>
    <p class="mb-12 max-w-3xl text-center text-2xl font-medium text-white/60 md:text-3xl">
      I'm a freelance software engineer and architect with a passion for developer experience.
    </p>
    <div class="flex justify-center">
      <a
        href="/freelance"
        class="group relative flex items-center gap-2 rounded-lg bg-blue-500 px-8 py-4 text-lg font-semibold text-white transition-all duration-200 hover:scale-[1.02] hover:bg-blue-600 hover:shadow-lg"
      >
        Work with Me
        <CaretIcon />
      </a>
    </div>
  </div>
  <SectionDivider className="absolute bottom-[2%]" />
  <script is:inline>
    const TYPING_SPEED = 120;
    const TYPING_PAUSE = 2500;
    const DELETING_SPEED = 120;
    const SWITCH_PAUSE = 250;

    const names = ["Ben Limmer", "blimmer"];
    let current = 0;
    let el = null;
    let typing = true;
    let charIndex = 0;
    let loopTimeout;

    function typeLoop() {
      const name = names[current];
      if (typing) {
        if (charIndex < name.length) {
          el.textContent = name.slice(0, charIndex + 1);
          charIndex++;
          loopTimeout = setTimeout(typeLoop, TYPING_SPEED);
        } else {
          typing = false;
          loopTimeout = setTimeout(typeLoop, TYPING_PAUSE);
        }
      } else {
        if (charIndex > 0) {
          el.textContent = name.slice(0, charIndex - 1);
          charIndex--;
          loopTimeout = setTimeout(typeLoop, DELETING_SPEED);
        } else {
          typing = true;
          current = (current + 1) % names.length;
          loopTimeout = setTimeout(typeLoop, SWITCH_PAUSE);
        }
      }
    }

    if (typeof window !== "undefined") {
      window.addEventListener("DOMContentLoaded", () => {
        el = document.getElementById("typewriter");
        const prefersReducedMotion = window.matchMedia("(prefers-reduced-motion: reduce)").matches;

        if (!prefersReducedMotion) {
          typeLoop();
        }
      });
    }
  </script>
  <style>
    .hero-grid-bg {
      background-color: #101623;
      background-image:
        linear-gradient(to right, rgba(255, 255, 255, 0.08) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(255, 255, 255, 0.08) 1px, transparent 1px);
      background-size: 40px 40px;
    }
    #typewriter-container {
      display: inline-block;
      min-height: 1em;
    }
    #typewriter {
      display: inline-block;
      text-align: left;
    }
    .cursor {
      display: inline-block;
      margin-left: 2px;
      animation: blink 1.5s step-end infinite;
      position: absolute;
      right: -0.2em;
      top: -0.1em;
      font-weight: 100;
    }
    @media (prefers-reduced-motion: reduce) {
      .cursor {
        display: none;
      }
    }
    @keyframes blink {
      0%,
      50% {
        opacity: 1;
      }
      50.1%,
      100% {
        opacity: 0;
      }
    }
  </style>
</section>
