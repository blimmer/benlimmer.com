---
interface MenuItem {
  path: string;
  text: string;
}

const menuItems: MenuItem[] = [
  { path: "/about", text: "About" },
  { path: "/freelance", text: "Freelance" },
  { path: "/blog", text: "Blog" },
  { path: "/portfolio", text: "Portfolio" },
  { path: "/freelance/contact", text: "Contact" },
];
---

<header class="bg-header border-light sticky top-0 z-50 w-full border-b" role="banner">
  <nav class="mx-auto flex max-w-7xl items-center justify-between px-6 py-3" aria-label="Main navigation">
    <div class="flex items-center gap-8">
      <span class="text-primary text-xl font-bold">
        <a href="/" aria-label="home page">Ben Limmer</a>
      </span>
      <ul class="text-secondary hidden gap-6 text-base font-medium md:flex" role="menubar">
        {
          menuItems.map((item) => (
            <li role="none">
              <a href={item.path} role="menuitem" class="hover:text-primary transition-colors">
                {item.text}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <div class="mr-4 ml-auto flex max-w-xs justify-end md:mr-0 md:block">
      <button
        id="magnifying-glass"
        aria-label="Search"
        class="border-light bg-header focus-visible:bg-secondary focus-visible:text-primary focus:ring-primary flex items-center justify-start gap-2 rounded border px-4 py-2 text-sm duration-200 focus:ring-2 focus:outline-none md:justify-center"
      >
        <svg height="18" width="18" stroke-linejoin="round" viewBox="0 0 16 16" style="color: currentcolor;"
          ><path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M3.5 7C3.5 5.067 5.067 3.5 7 3.5C8.933 3.5 10.5 5.067 10.5 7C10.5 7.88461 10.1718 8.69256 9.63058 9.30876L9.30876 9.63058C8.69256 10.1718 7.88461 10.5 7 10.5C5.067 10.5 3.5 8.933 3.5 7ZM9.96544 11.0261C9.13578 11.6382 8.11014 12 7 12C4.23858 12 2 9.76142 2 7C2 4.23858 4.23858 2 7 2C9.76142 2 12 4.23858 12 7C12 8.11014 11.6382 9.13578 11.0261 9.96544L14.0303 12.9697L14.5607 13.5L13.5 14.5607L12.9697 14.0303L9.96544 11.0261Z"
            fill="currentColor"></path></svg
        >
        <span class="hidden md:inline">Search</span>
      </button>
    </div>

    <details class="text-secondary md:hidden">
      <summary
        class="cursor-pointer list-none"
        aria-label="Toggle menu"
        role="button"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <span class="sr-only">Open main menu</span>
      </summary>
      <ul
        id="mobile-menu"
        class="bg-header border-light absolute right-0 mt-2 w-48 rounded-md border p-2 shadow-lg"
        role="menu"
      >
        {
          menuItems.map((item) => (
            <li role="none">
              <a
                href={item.path}
                class="block px-4 py-2 transition-colors hover:bg-gray-700 hover:text-white"
                role="menuitem"
              >
                {item.text}
              </a>
            </li>
          ))
        }
      </ul>
    </details>
  </nav>
</header>

<script>
  // Add keyboard navigation support for the mobile menu
  document.addEventListener("DOMContentLoaded", () => {
    const details = document.querySelector("details");
    const summary = document.querySelector("summary");

    if (details && summary) {
      summary.addEventListener("click", () => {
        const isExpanded = details.hasAttribute("open");
        summary.setAttribute("aria-expanded", (!isExpanded).toString());
      });

      // Close menu when pressing Escape
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && details.hasAttribute("open")) {
          details.removeAttribute("open");
          summary.setAttribute("aria-expanded", "false");
        }
      });
    }
  });
</script>
