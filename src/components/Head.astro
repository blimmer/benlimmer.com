---
import { render } from "astro:content";
import "../styles/global.css";
import headshot from "src/assets/headshot.png";
import type { BlogPost } from "src/util";

interface Props {
  title: string;
  description: string;
  blogPost?: BlogPost;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, blogPost } = Astro.props;

let lastModified: string | undefined;
if (blogPost) {
  const blogPostContent = await render(blogPost);
  lastModified = blogPostContent.remarkPluginFrontmatter.lastModified;
}
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="generator" content={Astro.generator} />
<meta name="author" content="Ben Limmer" />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Favicon -->
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="manifest" href="/site.webmanifest" />

<!-- RSS Feed -->
<link rel="alternate" type="application/rss+xml" title="RSS Feed for BenLimmer.com" href="/feed.xml" />

<!-- Sitemap -->
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Open Graph -->
<meta property="og:site_name" content="BenLimmer.com" />
<meta property="og:image" content={headshot.src} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalURL} />
{
  blogPost ? (
    <>
      <meta property="og:type" content="article" />
      <meta property="article:published_time" content={blogPost.date.toString()} />
      <meta property="article:modified_time" content={lastModified} />
      <meta property="article:author" content="https://benlimmer.com/about/" />
      {blogPost.data.tags?.map((tag) => (
        <meta property="article:tag" content={tag} />
      ))}
    </>
  ) : (
    <>
      <meta property="og:type" content="website" />
    </>
  )
}

<!-- Twitter -->
<meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@l1m5" />
<meta name="twitter:creator" content="@l1m5" />
<meta name="twitter:image:src" content={headshot.src} />
<meta name="twitter:title" content={title} />
<meta name="twitter:url" content={canonicalURL} />
<meta name="twitter:description" content={description} />
