---
import { render, type CollectionEntry } from "astro:content";
import MdxProse from "src/components/MdxProse.astro";
import Layout from "src/layouts/Layout.astro";
import { Image } from "astro:assets";
import gravatar from "src/assets/gravatar.jpeg";
import { getAllBlogPosts } from "src/util";
import { Temporal } from "temporal-polyfill";
import TldrSection from "src/components/TldrSection.astro";
import BugReportSection from "src/components/BugReportSection.astro";
import { type WithContext, type BlogPosting } from "schema-dts";
import headshot from "src/assets/headshot.png";
import ArchiveSection from "src/components/ArchiveSection.astro";
import PostPagination from "src/components/PostPagination.astro";

export async function getStaticPaths() {
  const posts = await getAllBlogPosts();
  return posts.map((post) => {
    const { date, slug } = post;
    return {
      params: { slug },
      props: { ...post, date },
    };
  });
}

type Props = CollectionEntry<"blog"> & { date: Temporal.ZonedDateTime };
const post = Astro.props;
const {
  Content,
  remarkPluginFrontmatter: { lastModified },
} = await render(post);

const openGraphTags = {
  "og:type": "article",
  "article:published_time": post.date.toInstant().toString(),
  "article:modified_time": lastModified,
  "article:author": "https://benlimmer.com/about/",
  "article:tag": post.data.tags ?? [],
};

const jsonLd: WithContext<BlogPosting> = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: post.data.title,
  description: post.data.description,
  datePublished: post.date.toInstant().toString(),
  dateModified: lastModified,
  author: {
    "@type": "Person",
    name: "Ben Limmer",
    url: "https://benlimmer.com/about/",
  },
  image: headshot.src,
  keywords: post.data.tags ?? [],
  inLanguage: "en-US",
  ...(post.body && {
    wordCount: post.body.split(" ").length,
    articleBody: post.body,
  }),
};
---

<Layout
  title={[post.data.title]}
  description={post.data.description}
  openGraphTags={openGraphTags}
  jsonLd={jsonLd}
  noIndex={post.data.archive ?? false}
>
  <article>
    <main class="mx-auto max-w-4xl px-4 py-12">
      <MdxProse>
        <h1>{post.data.title}</h1>
        <div class="text-md flex items-center text-gray-400">
          Posted on {post.date.toLocaleString(undefined, { year: "numeric", month: "long", day: "numeric" })} by Ben Limmer
          <Image
            src={gravatar}
            alt="Avatar image of Ben Limmer"
            width={20}
            height={20}
            class="mt-0 mb-0 ml-2"
            densities={[1, 2]}
            quality={80}
          />
        </div>
        {post.data.archive && <ArchiveSection />}
        {post.data.tldr && <TldrSection tldr={post.data.tldr} />}
        <Content />
      </MdxProse>
      <PostPagination currentPost={post} slug={Astro.params.slug} />
      <BugReportSection postTitle={post.data.title} postUrl={Astro.url.href} />
      <!-- TODO: add tags -->
    </main>
  </article>
</Layout>
